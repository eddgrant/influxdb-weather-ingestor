name: Build and Publish the Docker image to Dockerhub.

on:
  workflow_call:
    inputs:
      gradle_tasks:
        type: string
        description: The Gradle tasks to execute
        required: true

concurrency:
  # Limit to a single concurrent invocation to ensure tagging works correctly.
  group: influxdb-weather-ingestor

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      # Try updating to latest version of Docker to resolve 'Could not push image: missing content-length header for request:' issue.
      # https://forums.docker.com/t/unexpected-missing-content-length-header-for-request/145907/12
      - name: Check Docker Version
        run: docker --version

      - name: Install Latest Docker
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install docker-ce

      - name: Check Docker Version
        run: docker --version

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Checkout history and tags for semantic version calculation

      - name: Determine semantic version
        id: semver
        uses: paulhatch/semantic-version@v5.4.0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Login to Docker Hub
        run:  echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin registry.hub.docker.com/library/eddgrant/influxdb-weather-ingestor

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew -Pversion="${{ steps.semver.outputs.version }}" ${{ inputs.message }}

      - name: Push tag to repository
        run: |
          git tag ${{ steps.semver.outputs.version_tag }}
          git push origin ${{ steps.semver.outputs.version_tag }}